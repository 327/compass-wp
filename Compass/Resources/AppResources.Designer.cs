//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Compass.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class AppResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Compass.Resources.AppResources", typeof(AppResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        public static string About {
            get {
                return ResourceManager.GetString("About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to add.
        /// </summary>
        public static string AppBarButtonText {
            get {
                return ResourceManager.GetString("AppBarButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Menu Item.
        /// </summary>
        public static string AppBarMenuItemText {
            get {
                return ResourceManager.GetString("AppBarMenuItemText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MY APPLICATION.
        /// </summary>
        public static string ApplicationTitle {
            get {
                return ResourceManager.GetString("ApplicationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rotate the phone to calibrate the compass sensor. You can do this later, but note that when not calibrated, the compass needle may not show the accurate heading..
        /// </summary>
        public static string CalibrationViewInfo {
            get {
                return ResourceManager.GetString("CalibrationViewInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compass needs to be calibrated.
        /// </summary>
        public static string CalibrationViewTitle {
            get {
                return ResourceManager.GetString("CalibrationViewTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to My location.
        /// </summary>
        public static string CenterToLocationButtonText {
            get {
                return ResourceManager.GetString("CenterToLocationButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to start compass. Please try restarting the application..
        /// </summary>
        public static string FailedToStartCompassMessage {
            get {
                return ResourceManager.GetString("FailedToStartCompassMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instructions.
        /// </summary>
        public static string Instructions {
            get {
                return ResourceManager.GetString("Instructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow.
        /// </summary>
        public static string LocationAllowButtonText {
            get {
                return ResourceManager.GetString("LocationAllowButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string LocationCancelButtonText {
            get {
                return ResourceManager.GetString("LocationCancelButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow this application to access and use your location? This setting can be changed from the application settings later..
        /// </summary>
        public static string LocationUsageQueryText {
            get {
                return ResourceManager.GetString("LocationUsageQueryText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of location.
        /// </summary>
        public static string LocationUsageQueryTitle {
            get {
                return ResourceManager.GetString("LocationUsageQueryTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your device does not have compass supported. The application will still run, but the compass needle will not show the correct heading..
        /// </summary>
        public static string NoCompassMessage {
            get {
                return ResourceManager.GetString("NoCompassMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LeftToRight.
        /// </summary>
        public static string ResourceFlowDirection {
            get {
                return ResourceManager.GetString("ResourceFlowDirection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to en-US.
        /// </summary>
        public static string ResourceLanguage {
            get {
                return ResourceManager.GetString("ResourceLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to skip.
        /// </summary>
        public static string Skip {
            get {
                return ResourceManager.GetString("Skip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle fullscreen.
        /// </summary>
        public static string ToggleFullscreenButtonText {
            get {
                return ResourceManager.GetString("ToggleFullscreenButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle map mode.
        /// </summary>
        public static string ToggleMapModeButtonText {
            get {
                return ResourceManager.GetString("ToggleMapModeButtonText", resourceCulture);
            }
        }
    }
}
